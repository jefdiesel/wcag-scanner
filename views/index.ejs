<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WCAG Accessibility Scanner</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
  <style>
    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      line-height: 1.6;
      background-color: #f4f6f9;
    }
    .critical {
      background-color: #f8d7da;
      color: #721c24;
    }
    .warning {
      background-color: #fff3cd;
      color: #856404;
    }
    .info {
      background-color: #d1ecf1;
      color: #0c5460;
    }
    .progress {
      height: 30px;
    }
    .progress-bar {
      font-size: 16px;
      line-height: 30px;
    }
    .page-url {
      word-break: break-all;
    }
    .card {
      border-radius: 0.5rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      margin-bottom: 1.5rem;
      border: none;
    }
    .card-header {
      background-color: #4a6da7;
      color: white;
      border-top-left-radius: 0.5rem !important;
      border-top-right-radius: 0.5rem !important;
      font-weight: 600;
    }
    #scanInfo {
      margin-top: 10px;
      display: none;
    }
  </style>
</head>
<body>
  <div class="container mt-5">
    <div class="card mb-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h1 class="h3 mb-0">WCAG Accessibility Scanner</h1>
        <div>
          <a href="/queue" class="btn btn-outline-light">
            <i class="fas fa-list-check"></i> Scan Queue
          </a>
        </div>
      </div>
      <div class="card-body">
        <% if (!results) { %>
          <div class="bg-light p-4 rounded">
            <form id="scanForm" action="/scan/test" method="post">
              <div class="form-group row mb-3">
                <label for="url" class="col-sm-4 col-form-label h5">Website URL:</label>
                <div class="col-sm-8">
                  <input type="url" class="form-control" id="url" name="url" placeholder="https://example.com" required>
                </div>
              </div>
              
              <div class="form-group row mb-3">
                <label for="maxPages" class="col-sm-4 col-form-label h5">Maximum Pages to Scan:</label>
                <div class="col-sm-8">
                  <input type="number" class="form-control" id="maxPages" name="maxPages" value="1111" min="1">
                </div>
              </div>

              <div class="form-group row mb-3">
                <div class="col-sm-4"></div>
                <div class="col-sm-8">
                  <div class="form-check">
                    <input class="form-check-input" type="checkbox" id="queueScan" name="queue">
                    <label class="form-check-label" for="queueScan">
                      Add to queue (scan later)
                    </label>
                  </div>
                </div>
              </div>
              
              <div class="form-group d-flex gap-2">
                <button type="submit" class="btn btn-success btn-lg" id="startScan">Start Scan</button>
                <a href="/queue" class="btn btn-primary btn-lg">View Queue</a>
              </div>
            </form>
          </div>
          
          <div class="progress mt-4 d-none" id="scanProgress">
            <div class="progress-bar bg-success" role="progressbar" style="width: 0%" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100">0%</div>
          </div>

          <!-- Scan progress info section -->
          <div id="scanInfo" class="alert alert-info mt-3">
            <h5>Scan Progress</h5>
            <div class="d-flex flex-wrap gap-4">
              <div>
                <p class="mb-1"><strong>Pages Found:</strong> <span id="pagesFound">0</span></p>
                <p class="mb-1"><strong>Pages Scanned:</strong> <span id="pagesScanned">0</span></p>
                <p class="mb-0"><strong>Pages in Queue:</strong> <span id="pagesQueue">0</span></p>
              </div>
              <div>
                <p class="mb-1"><strong>Scan Speed:</strong> <span id="scanSpeed">0</span> pages/minute</p>
                <p class="mb-1"><strong>Estimated Time Left:</strong> <span id="timeLeft">calculating...</span></p>
                <p class="mb-0"><strong>Status:</strong> <span id="scanStatus">Initializing...</span></p>
              </div>
            </div>
          </div>
        <% } else { %>
          <div class="mb-4">
            <a href="/" class="btn btn-primary">Start New Scan</a>
            <a href="/queue" class="btn btn-secondary ms-2">View Queue</a>
            <% if (pdfPath) { %>
              <a href="<%= pdfPath %>" class="btn btn-success ms-2" target="_blank">Download PDF Report</a>
            <% } %>
            <% if (csvPath) { %>
              <a href="<%= csvPath %>" class="btn btn-info ms-2">Download CSV Data</a>
            <% } %>
          </div>
          
          <div class="card mb-4">
            <div class="card-header bg-primary text-white">
              <h4 class="mb-0">Scan Results Summary</h4>
            </div>
            <div class="card-body">
              <p class="lead">Total Pages Scanned: <%= results.length %></p>
              
              <% 
                let totalViolations = 0;
                let criticalIssues = 0;
                let warningIssues = 0;
                let infoIssues = 0;
                
                results.forEach(r => {
                  totalViolations += r.violationCounts.total;
                  criticalIssues += r.violationCounts.critical;
                  warningIssues += r.violationCounts.warning;
                  infoIssues += r.violationCounts.info;
                });
              %>
              
              <div class="row">
                <div class="col-md-6">
                  <h5>Issue Breakdown:</h5>
                  <ul class="list-group">
                    <li class="list-group-item d-flex justify-content-between align-items-center critical">
                      Critical Issues
                      <span class="badge bg-danger rounded-pill"><%= criticalIssues %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center warning">
                      Warning Issues
                      <span class="badge bg-warning text-dark rounded-pill"><%= warningIssues %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center info">
                      Information Issues
                      <span class="badge bg-info rounded-pill"><%= infoIssues %></span>
                    </li>
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                      <strong>Total Issues</strong>
                      <span class="badge bg-dark rounded-pill"><%= totalViolations %></span>
                    </li>
                  </ul>
                </div>
                
                <div class="col-md-6">
                  <h5>Issue Severity Analysis:</h5>
                  <div class="alert alert-info">
                    <p class="mb-1"><strong>Total Issues:</strong> <%= totalViolations %></p>
                    <% if (totalViolations > 0) { %>
                      <p class="mb-1">Critical issues make up <%= (criticalIssues / totalViolations * 100).toFixed(1) %>% of all issues</p>
                      <p class="mb-0">Warning issues make up <%= (warningIssues / totalViolations * 100).toFixed(1) %>% of all issues</p>
                    <% } else { %>
                      <p class="mb-0">No issues found</p>
                    <% } %>
                  </div>
                  <p class="mt-2 small text-muted">
                    <i class="fas fa-info-circle"></i> WCAG compliance requires addressing all critical and warning issues.
                  </p>
                </div>
              </div>
            </div>
          </div>
          
          <div class="card">
            <div class="card-header bg-primary text-white">
              <h4 class="mb-0">Pages Scanned</h4>
            </div>
            <div class="card-body p-0">
              <div class="table-responsive">
                <table class="table table-striped table-hover mb-0">
                  <thead class="table-dark">
                    <tr>
                      <th>Page URL</th>
                      <th class="text-center">Critical</th>
                      <th class="text-center">Warning</th>
                      <th class="text-center">Info</th>
                      <th class="text-center">Total</th>
                      <th class="text-center">Status</th>
                    </tr>
                  </thead>
                  <tbody>
                    <% results.forEach(result => { %>
                      <tr>
                        <td class="page-url"><%= result.page %></td>
                        <td class="text-center <%= result.violationCounts.critical > 0 ? 'critical' : '' %>">
                          <%= result.violationCounts.critical %>
                        </td>
                        <td class="text-center <%= result.violationCounts.warning > 0 ? 'warning' : '' %>">
                          <%= result.violationCounts.warning %>
                        </td>
                        <td class="text-center <%= result.violationCounts.info > 0 ? 'info' : '' %>">
                          <%= result.violationCounts.info %>
                        </td>
                        <td class="text-center fw-bold">
                          <%= result.violationCounts.total %>
                        </td>
                        <td class="text-center">
                          <% if (result.status === 404) { %>
                            <span class="critical">404</span>
                          <% } else if (result.status >= 400) { %>
                            <span class="warning"><%= result.status %></span>
                          <% } else if (result.status) { %>
                            <span class="text-success"><%= result.status %></span>
                          <% } else { %>
                            N/A
                          <% } %>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        <% } %>
      </div>
    </div>
  </div>
  
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const scanForm = document.getElementById('scanForm');
      if (scanForm) {
        scanForm.addEventListener('submit', function(e) {
          e.preventDefault();
          
          const url = document.getElementById('url').value;
          const maxPages = document.getElementById('maxPages').value;
          const queueScan = document.getElementById('queueScan').checked;
          const progressBar = document.querySelector('#scanProgress .progress-bar');
          
          // Check if we're just queueing the scan
          if (queueScan) {
            // Submit form data via AJAX to queue the scan
            fetch('/scan/test', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify({
                url: url,
                maxPages: maxPages,
                queue: true
              }),
            })
            .then(response => response.json())
            .then(data => {
              if (data.error) {
                alert('Error: ' + data.error);
              } else {
                // Redirect to queue page
                window.location.href = '/queue';
              }
            })
            .catch(error => {
              console.error('Error:', error);
              alert('An error occurred while trying to queue the scan.');
            });
            return;
          }
          
          // Show progress UI elements
          document.getElementById('scanProgress').classList.remove('d-none');
          document.getElementById('scanInfo').style.display = 'block';
          document.getElementById('startScan').disabled = true;
          
          // Submit form data via AJAX
          fetch('/scan/test', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              url: url,
              maxPages: maxPages,
              queue: false
            }),
          })
          .then(response => response.json())
          .then(data => {
            if (data.error) {
              alert('Error: ' + data.error);
              document.getElementById('startScan').disabled = false;
              document.getElementById('scanProgress').classList.add('d-none');
              document.getElementById('scanInfo').style.display = 'none';
            } else {
              // Configure SSE for progress updates
              const scanId = data.scanId;
              const eventSource = new EventSource('/progress?scanId=' + scanId);
              let pagesFound = 0;
              let pagesScanned = 0;
              let pagesInQueue = 0;
              let startTime = Date.now();
              let scanRates = [];

              const updateTimeEstimates = () => {
                // Calculate scan speed (pages per minute)
                const elapsedMinutes = (Date.now() - startTime) / 60000;
                const scanRate = pagesScanned / Math.max(0.1, elapsedMinutes);
                
                // Keep last 5 scan rates for averaging
                scanRates.push(scanRate);
                if (scanRates.length > 5) scanRates.shift();
                
                // Calculate average scan rate
                const avgScanRate = scanRates.reduce((sum, rate) => sum + rate, 0) / scanRates.length;
                
                // Display scan speed
                document.getElementById('scanSpeed').textContent = avgScanRate.toFixed(1);
                
                // Estimate time remaining
                if (avgScanRate > 0 && pagesFound > pagesScanned) {
                  const pagesRemaining = pagesFound + pagesInQueue - pagesScanned;
                  const minutesLeft = pagesRemaining / avgScanRate;
                  
                  // Format time estimate
                  let timeLeft;
                  if (minutesLeft < 1) {
                    timeLeft = 'less than a minute';
                  } else if (minutesLeft < 60) {
                    timeLeft = `about ${Math.ceil(minutesLeft)} minute${Math.ceil(minutesLeft) > 1 ? 's' : ''}`;
                  } else {
                    const hours = Math.floor(minutesLeft / 60);
                    const mins = Math.ceil(minutesLeft % 60);
                    timeLeft = `about ${hours} hour${hours > 1 ? 's' : ''} ${mins > 0 ? `and ${mins} minute${mins > 1 ? 's' : ''}` : ''}`;
                  }
                  
                  document.getElementById('timeLeft').textContent = timeLeft;
                } else {
                  document.getElementById('timeLeft').textContent = 'calculating...';
                }
              };
              
              eventSource.onmessage = function(event) {
                try {
                  const progressData = JSON.parse(event.data);
                  
                  // Update scan metrics
                  pagesScanned = progressData.scanned || 0;
                  pagesFound = progressData.found || pagesFound;
                  pagesInQueue = progressData.inQueue || 0;
                  
                  // Update the page elements
                  document.getElementById('pagesFound').textContent = pagesFound;
                  document.getElementById('pagesScanned').textContent = pagesScanned;
                  document.getElementById('pagesQueue').textContent = pagesInQueue;
                  
                  // Update status message
                  if (progressData.error) {
                    document.getElementById('scanStatus').textContent = 'Error: ' + progressData.error;
                    document.getElementById('scanStatus').classList.add('text-danger');
                  } else if (progressData.completed) {
                    document.getElementById('scanStatus').textContent = 'Scan completed';
                    document.getElementById('scanStatus').classList.add('text-success');
                  } else {
                    document.getElementById('scanStatus').textContent = 'Scanning in progress...';
                  }
                  
                  // Update time estimates
                  updateTimeEstimates();
                  
                  // Update progress bar
                  const percentage = Math.min(100, Math.round((pagesScanned / Math.max(pagesFound, maxPages)) * 100));
                  progressBar.style.width = percentage + '%';
                  progressBar.setAttribute('aria-valuenow', percentage);
                  progressBar.textContent = percentage + '%';
                  
                  if (percentage >= 100 || progressData.completed) {
                    eventSource.close();
                    // Open results page when scan is complete
                    window.location.href = '/results/' + scanId;
                  }
                } catch (e) {
                  // Handle legacy format - just a number
                  const scanned = parseInt(event.data);
                  document.getElementById('pagesScanned').textContent = scanned;
                  
                  const percentage = Math.min(100, Math.round((scanned / maxPages) * 100));
                  progressBar.style.width = percentage + '%';
                  progressBar.setAttribute('aria-valuenow', percentage);
                  progressBar.textContent = percentage + '%';
                  
                  if (percentage >= 100) {
                    eventSource.close();
                    // Open results page when scan is complete
                    window.location.href = '/results/' + scanId;
                  }
                }
              };
              
              eventSource.onerror = function() {
                eventSource.close();
                alert('Error receiving scan updates');
                document.getElementById('startScan').disabled = false;
                document.getElementById('scanProgress').classList.add('d-none');
                document.getElementById('scanInfo').style.display = 'none';
              };
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('An error occurred during the scan request');
            document.getElementById('startScan').disabled = false;
            document.getElementById('scanProgress').classList.add('d-none');
            document.getElementById('scanInfo').style.display = 'none';
          });
        });
      }
    });
  </script>
</body>
</html>
